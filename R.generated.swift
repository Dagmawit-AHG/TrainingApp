//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let segue = segue()
  let reuseIdentifier = reuseIdentifier()

  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 3 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var launchScreen: launchScreen { .init(source: .init(bundle: bundle, tableName: "LaunchScreen", preferredLanguages: preferredLanguages, locale: locale)) }
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }
    var main: main { .init(source: .init(bundle: bundle, tableName: "Main", preferredLanguages: preferredLanguages, locale: locale)) }

    func launchScreen(preferredLanguages: [String]) -> launchScreen {
      .init(source: .init(bundle: bundle, tableName: "LaunchScreen", preferredLanguages: preferredLanguages, locale: locale))
    }
    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }
    func main(preferredLanguages: [String]) -> main {
      .init(source: .init(bundle: bundle, tableName: "Main", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.launchScreen` struct is generated, and contains static references to 0 localization keys.
    struct launchScreen {
      let source: RswiftResources.StringResource.Source
    }

    /// This `_R.string.localizable` struct is generated, and contains static references to 48 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: A reset email has been sent to 
      ///
      /// Key: A reset email has been sent to
      ///
      /// Locales: en, pl
      var aResetEmailHasBeenSentTo: RswiftResources.StringResource { .init(key: "A reset email has been sent to", tableName: "Localizable", source: source, developmentValue: "A reset email has been sent to ", comment: nil) }

      /// en translation: Addis Ababa
      ///
      /// Key: Addis Ababa
      ///
      /// Locales: en, pl
      var addisAbaba: RswiftResources.StringResource { .init(key: "Addis Ababa", tableName: "Localizable", source: source, developmentValue: "Addis Ababa", comment: nil) }

      /// en translation: Couldn't Sign in
      ///
      /// Key: Couldn'tSignin
      ///
      /// Locales: en, pl
      var couldnTSignin: RswiftResources.StringResource { .init(key: "Couldn'tSignin", tableName: "Localizable", source: source, developmentValue: "Couldn't Sign in", comment: nil) }

      /// en translation: Couldn't Sign up
      ///
      /// Key: Couldn'tSignup
      ///
      /// Locales: en, pl
      var couldnTSignup: RswiftResources.StringResource { .init(key: "Couldn'tSignup", tableName: "Localizable", source: source, developmentValue: "Couldn't Sign up", comment: nil) }

      /// en translation: Danish
      ///
      /// Key: Danish
      ///
      /// Locales: en, pl
      var danish: RswiftResources.StringResource { .init(key: "Danish", tableName: "Localizable", source: source, developmentValue: "Danish", comment: nil) }

      /// en translation: Dansk
      ///
      /// Key: Dansk
      ///
      /// Locales: en, pl
      var dansk: RswiftResources.StringResource { .init(key: "Dansk", tableName: "Localizable", source: source, developmentValue: "Dansk", comment: nil) }

      /// en translation: Default
      ///
      /// Key: Default
      ///
      /// Locales: en, pl
      var `default`: RswiftResources.StringResource { .init(key: "Default", tableName: "Localizable", source: source, developmentValue: "Default", comment: nil) }

      /// en translation: Done
      ///
      /// Key: Done
      ///
      /// Locales: en, pl
      var done: RswiftResources.StringResource { .init(key: "Done", tableName: "Localizable", source: source, developmentValue: "Done", comment: nil) }

      /// en translation: Dutch
      ///
      /// Key: Dutch
      ///
      /// Locales: en, pl
      var dutch: RswiftResources.StringResource { .init(key: "Dutch", tableName: "Localizable", source: source, developmentValue: "Dutch", comment: nil) }

      /// en translation: 
      ///
      /// Key: Empty
      ///
      /// Locales: en, pl
      var empty: RswiftResources.StringResource { .init(key: "Empty", tableName: "Localizable", source: source, developmentValue: "", comment: nil) }

      /// en translation: English(Australia)
      ///
      /// Key: English(Australia)
      ///
      /// Locales: en, pl
      var englishAustralia: RswiftResources.StringResource { .init(key: "English(Australia)", tableName: "Localizable", source: source, developmentValue: "English(Australia)", comment: nil) }

      /// en translation: English(Canada)
      ///
      /// Key: English(Canada)
      ///
      /// Locales: en, pl
      var englishCanada: RswiftResources.StringResource { .init(key: "English(Canada)", tableName: "Localizable", source: source, developmentValue: "English(Canada)", comment: nil) }

      /// en translation: English(UK)
      ///
      /// Key: English(UK)
      ///
      /// Locales: en, pl
      var englishUK: RswiftResources.StringResource { .init(key: "English(UK)", tableName: "Localizable", source: source, developmentValue: "English(UK)", comment: nil) }

      /// en translation: English(US)
      ///
      /// Key: English(US)
      ///
      /// Locales: en, pl
      var englishUS: RswiftResources.StringResource { .init(key: "English(US)", tableName: "Localizable", source: source, developmentValue: "English(US)", comment: nil) }

      /// en translation: English(United States)
      ///
      /// Key: English(United States)
      ///
      /// Locales: en, pl
      var englishUnitedStates: RswiftResources.StringResource { .init(key: "English(United States)", tableName: "Localizable", source: source, developmentValue: "English(United States)", comment: nil) }

      /// en translation: Error
      ///
      /// Key: Error
      ///
      /// Locales: en, pl
      var error: RswiftResources.StringResource { .init(key: "Error", tableName: "Localizable", source: source, developmentValue: "Error", comment: nil) }

      /// en translation: Frankfurt
      ///
      /// Key: Frankfurt
      ///
      /// Locales: en, pl
      var frankfurt: RswiftResources.StringResource { .init(key: "Frankfurt", tableName: "Localizable", source: source, developmentValue: "Frankfurt", comment: nil) }

      /// en translation: Heathrow
      ///
      /// Key: Heathrow
      ///
      /// Locales: en, pl
      var heathrow: RswiftResources.StringResource { .init(key: "Heathrow", tableName: "Localizable", source: source, developmentValue: "Heathrow", comment: nil) }

      /// en translation: HomeViewController
      ///
      /// Key: HomeViewController
      ///
      /// Locales: en, pl
      var homeViewController: RswiftResources.StringResource { .init(key: "HomeViewController", tableName: "Localizable", source: source, developmentValue: "HomeViewController", comment: nil) }

      /// en translation: Hong Kong
      ///
      /// Key: Hong Kong
      ///
      /// Locales: en, pl
      var hongKong: RswiftResources.StringResource { .init(key: "Hong Kong", tableName: "Localizable", source: source, developmentValue: "Hong Kong", comment: nil) }

      /// en translation: Italian
      ///
      /// Key: Italian
      ///
      /// Locales: en, pl
      var italian: RswiftResources.StringResource { .init(key: "Italian", tableName: "Localizable", source: source, developmentValue: "Italian", comment: nil) }

      /// en translation: Italy
      ///
      /// Key: Italy
      ///
      /// Locales: en, pl
      var italy: RswiftResources.StringResource { .init(key: "Italy", tableName: "Localizable", source: source, developmentValue: "Italy", comment: nil) }

      /// en translation: Language
      ///
      /// Key: Language
      ///
      /// Locales: en, pl
      var language: RswiftResources.StringResource { .init(key: "Language", tableName: "Localizable", source: source, developmentValue: "Language", comment: nil) }

      /// en translation: LanguageCell
      ///
      /// Key: LanguageCell
      ///
      /// Locales: en, pl
      var languageCell: RswiftResources.StringResource { .init(key: "LanguageCell", tableName: "Localizable", source: source, developmentValue: "LanguageCell", comment: nil) }

      /// en translation: Netherlands
      ///
      /// Key: Netherlands
      ///
      /// Locales: en, pl
      var netherlands: RswiftResources.StringResource { .init(key: "Netherlands", tableName: "Localizable", source: source, developmentValue: "Netherlands", comment: nil) }

      /// en translation: New Delhi
      ///
      /// Key: New Delhi
      ///
      /// Locales: en, pl
      var newDelhi: RswiftResources.StringResource { .init(key: "New Delhi", tableName: "Localizable", source: source, developmentValue: "New Delhi", comment: nil) }

      /// en translation: OK
      ///
      /// Key: OK
      ///
      /// Locales: en, pl
      var oK: RswiftResources.StringResource { .init(key: "OK", tableName: "Localizable", source: source, developmentValue: "OK", comment: nil) }

      /// en translation: Please try again
      ///
      /// Key: Please try again
      ///
      /// Locales: en, pl
      var pleaseTryAgain: RswiftResources.StringResource { .init(key: "Please try again", tableName: "Localizable", source: source, developmentValue: "Please try again", comment: nil) }

      /// en translation: Polish
      ///
      /// Key: Polish
      ///
      /// Locales: en, pl
      var polish: RswiftResources.StringResource { .init(key: "Polish", tableName: "Localizable", source: source, developmentValue: "Polish", comment: nil) }

      /// en translation: Success
      ///
      /// Key: Success
      ///
      /// Locales: en, pl
      var success: RswiftResources.StringResource { .init(key: "Success", tableName: "Localizable", source: source, developmentValue: "Success", comment: nil) }

      /// en translation: Suggested Languages
      ///
      /// Key: Suggested Languages
      ///
      /// Locales: en, pl
      var suggestedLanguages: RswiftResources.StringResource { .init(key: "Suggested Languages", tableName: "Localizable", source: source, developmentValue: "Suggested Languages", comment: nil) }

      /// en translation: Wroclow
      ///
      /// Key: Wroclow
      ///
      /// Locales: en, pl
      var wroclow: RswiftResources.StringResource { .init(key: "Wroclow", tableName: "Localizable", source: source, developmentValue: "Wroclow", comment: nil) }

      /// en translation: Wrong Code
      ///
      /// Key: Wrong Code
      ///
      /// Locales: en, pl
      var wrongCode: RswiftResources.StringResource { .init(key: "Wrong Code", tableName: "Localizable", source: source, developmentValue: "Wrong Code", comment: nil) }

      /// en translation: backToHomepageSegue
      ///
      /// Key: backToHomepageSegue
      ///
      /// Locales: en, pl
      var backToHomepageSegue: RswiftResources.StringResource { .init(key: "backToHomepageSegue", tableName: "Localizable", source: source, developmentValue: "backToHomepageSegue", comment: nil) }

      /// en translation: backToLoginSegue
      ///
      /// Key: backToLoginSegue
      ///
      /// Locales: en, pl
      var backToLoginSegue: RswiftResources.StringResource { .init(key: "backToLoginSegue", tableName: "Localizable", source: source, developmentValue: "backToLoginSegue", comment: nil) }

      /// en translation: backToSettingsSegue
      ///
      /// Key: backToSettingsSegue
      ///
      /// Locales: en, pl
      var backToSettingsSegue: RswiftResources.StringResource { .init(key: "backToSettingsSegue", tableName: "Localizable", source: source, developmentValue: "backToSettingsSegue", comment: nil) }

      /// en translation: backToVerficationSegue
      ///
      /// Key: backToVerficationSegue
      ///
      /// Locales: en, pl
      var backToVerficationSegue: RswiftResources.StringResource { .init(key: "backToVerficationSegue", tableName: "Localizable", source: source, developmentValue: "backToVerficationSegue", comment: nil) }

      /// en translation: email
      ///
      /// Key: email
      ///
      /// Locales: en, pl
      var email: RswiftResources.StringResource { .init(key: "email", tableName: "Localizable", source: source, developmentValue: "email", comment: nil) }

      /// en translation: goBackToForgotPass
      ///
      /// Key: goBackToForgotPass
      ///
      /// Locales: en, pl
      var goBackToForgotPass: RswiftResources.StringResource { .init(key: "goBackToForgotPass", tableName: "Localizable", source: source, developmentValue: "goBackToForgotPass", comment: nil) }

      /// en translation: goToCodeSegue
      ///
      /// Key: goToCodeSegue
      ///
      /// Locales: en, pl
      var goToCodeSegue: RswiftResources.StringResource { .init(key: "goToCodeSegue", tableName: "Localizable", source: source, developmentValue: "goToCodeSegue", comment: nil) }

      /// en translation: goToLoginAfterNewPass
      ///
      /// Key: goToLoginAfterNewPass
      ///
      /// Locales: en, pl
      var goToLoginAfterNewPass: RswiftResources.StringResource { .init(key: "goToLoginAfterNewPass", tableName: "Localizable", source: source, developmentValue: "goToLoginAfterNewPass", comment: nil) }

      /// en translation: goToNewPassword
      ///
      /// Key: goToNewPassword
      ///
      /// Locales: en, pl
      var goToNewPassword: RswiftResources.StringResource { .init(key: "goToNewPassword", tableName: "Localizable", source: source, developmentValue: "goToNewPassword", comment: nil) }

      /// en translation: showCreateAccountPage
      ///
      /// Key: showCreateAccountPage
      ///
      /// Locales: en, pl
      var showCreateAccountPage: RswiftResources.StringResource { .init(key: "showCreateAccountPage", tableName: "Localizable", source: source, developmentValue: "showCreateAccountPage", comment: nil) }

      /// en translation: showForgotPasswordPage
      ///
      /// Key: showForgotPasswordPage
      ///
      /// Locales: en, pl
      var showForgotPasswordPage: RswiftResources.StringResource { .init(key: "showForgotPasswordPage", tableName: "Localizable", source: source, developmentValue: "showForgotPasswordPage", comment: nil) }

      /// en translation: showLanguagesPage
      ///
      /// Key: showLanguagesPage
      ///
      /// Locales: en, pl
      var showLanguagesPage: RswiftResources.StringResource { .init(key: "showLanguagesPage", tableName: "Localizable", source: source, developmentValue: "showLanguagesPage", comment: nil) }

      /// en translation: showLoginPage
      ///
      /// Key: showLoginPage
      ///
      /// Locales: en, pl
      var showLoginPage: RswiftResources.StringResource { .init(key: "showLoginPage", tableName: "Localizable", source: source, developmentValue: "showLoginPage", comment: nil) }

      /// en translation: showSettingsPage
      ///
      /// Key: showSettingsPage
      ///
      /// Locales: en, pl
      var showSettingsPage: RswiftResources.StringResource { .init(key: "showSettingsPage", tableName: "Localizable", source: source, developmentValue: "showSettingsPage", comment: nil) }

      /// en translation: signOutSegue
      ///
      /// Key: signOutSegue
      ///
      /// Locales: en, pl
      var signOutSegue: RswiftResources.StringResource { .init(key: "signOutSegue", tableName: "Localizable", source: source, developmentValue: "signOutSegue", comment: nil) }
    }

    /// This `_R.string.main` struct is generated, and contains static references to 85 localization keys.
    struct main {
      let source: RswiftResources.StringResource.Source

      /// en translation: Create Account
      ///
      /// Key: 0hJ-ps-IrS.configuration.title
      ///
      /// Locales: pl, en
      var hJPsIrSConfigurationTitle: RswiftResources.StringResource { .init(key: "0hJ-ps-IrS.configuration.title", tableName: "Main", source: source, developmentValue: "Create Account", comment: nil) }

      /// en translation: Button
      ///
      /// Key: 0hJ-ps-IrS.normalTitle
      ///
      /// Locales: pl, en
      var hJPsIrSNormalTitle: RswiftResources.StringResource { .init(key: "0hJ-ps-IrS.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: Polish
      ///
      /// Key: 0mw-0B-Mm9.text
      ///
      /// Locales: pl, en
      var mw0BMm9Text: RswiftResources.StringResource { .init(key: "0mw-0B-Mm9.text", tableName: "Main", source: source, developmentValue: "Polish", comment: nil) }

      /// en translation: Enter your email, we will send you 5 digits verification code.
      ///
      /// Key: 1WW-Ya-MxR.text
      ///
      /// Locales: pl, en
      var wwYaMxRText: RswiftResources.StringResource { .init(key: "1WW-Ya-MxR.text", tableName: "Main", source: source, developmentValue: "Enter your email, we will send you 5 digits verification code.", comment: nil) }

      /// en translation: Button
      ///
      /// Key: 2EQ-Nh-pMO.normalTitle
      ///
      /// Locales: pl, en
      var eqNhPMONormalTitle: RswiftResources.StringResource { .init(key: "2EQ-Nh-pMO.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: New Password
      ///
      /// Key: 2tp-JY-TBq.placeholder
      ///
      /// Locales: pl, en
      var tpJYTBqPlaceholder: RswiftResources.StringResource { .init(key: "2tp-JY-TBq.placeholder", tableName: "Main", source: source, developmentValue: "New Password", comment: nil) }

      /// en translation: Set New Password
      ///
      /// Key: 2zN-Ks-oGZ.text
      ///
      /// Locales: pl, en
      var zNKsOGZText: RswiftResources.StringResource { .init(key: "2zN-Ks-oGZ.text", tableName: "Main", source: source, developmentValue: "Set New Password", comment: nil) }

      /// en translation: Button
      ///
      /// Key: 2zy-NH-LAf.normalTitle
      ///
      /// Locales: pl, en
      var zyNHLAfNormalTitle: RswiftResources.StringResource { .init(key: "2zy-NH-LAf.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: Log In
      ///
      /// Key: 3PF-IP-IzG.title
      ///
      /// Locales: pl, en
      var pfipIzGTitle: RswiftResources.StringResource { .init(key: "3PF-IP-IzG.title", tableName: "Main", source: source, developmentValue: "Log In", comment: nil) }

      /// en translation: Forgot Password
      ///
      /// Key: 48d-fB-6da.text
      ///
      /// Locales: pl, en
      var dFB6daText: RswiftResources.StringResource { .init(key: "48d-fB-6da.text", tableName: "Main", source: source, developmentValue: "Forgot Password", comment: nil) }

      /// en translation: Select Origin
      ///
      /// Key: 5s3-tf-eVB.placeholder
      ///
      /// Locales: pl, en
      var s3TfEVBPlaceholder: RswiftResources.StringResource { .init(key: "5s3-tf-eVB.placeholder", tableName: "Main", source: source, developmentValue: "Select Origin", comment: nil) }

      /// en translation: From
      ///
      /// Key: 6OC-rX-3vv.text
      ///
      /// Locales: pl, en
      var ocrx3vvText: RswiftResources.StringResource { .init(key: "6OC-rX-3vv.text", tableName: "Main", source: source, developmentValue: "From", comment: nil) }

      /// en translation: Search Flights
      ///
      /// Key: 6Yi-u9-DLQ.title
      ///
      /// Locales: pl, en
      var yiU9DLQTitle: RswiftResources.StringResource { .init(key: "6Yi-u9-DLQ.title", tableName: "Main", source: source, developmentValue: "Search Flights", comment: nil) }

      /// en translation: English(UK)
      ///
      /// Key: 6wU-hb-B8h.text
      ///
      /// Locales: pl, en
      var wUHbB8hText: RswiftResources.StringResource { .init(key: "6wU-hb-B8h.text", tableName: "Main", source: source, developmentValue: "English(UK)", comment: nil) }

      /// en translation: Confirm
      ///
      /// Key: 8Hs-pe-fXr.configuration.title
      ///
      /// Locales: pl, en
      var hsPeFXrConfigurationTitle: RswiftResources.StringResource { .init(key: "8Hs-pe-fXr.configuration.title", tableName: "Main", source: source, developmentValue: "Confirm", comment: nil) }

      /// en translation: Button
      ///
      /// Key: 8Hs-pe-fXr.normalTitle
      ///
      /// Locales: pl, en
      var hsPeFXrNormalTitle: RswiftResources.StringResource { .init(key: "8Hs-pe-fXr.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: Forgot Password
      ///
      /// Key: 8LZ-BB-zll.text
      ///
      /// Locales: pl, en
      var lzbbZllText: RswiftResources.StringResource { .init(key: "8LZ-BB-zll.text", tableName: "Main", source: source, developmentValue: "Forgot Password", comment: nil) }

      /// en translation: Already have an account?
      ///
      /// Key: AKe-e2-38Y.text
      ///
      /// Locales: pl, en
      var aKeE238YText: RswiftResources.StringResource { .init(key: "AKe-e2-38Y.text", tableName: "Main", source: source, developmentValue: "Already have an account?", comment: nil) }

      /// en translation: Hello
      ///
      /// Key: AXs-uJ-9pL.text
      ///
      /// Locales: pl, en
      var aXsUJ9pLText: RswiftResources.StringResource { .init(key: "AXs-uJ-9pL.text", tableName: "Main", source: source, developmentValue: "Hello", comment: nil) }

      /// en translation: Round Trip
      ///
      /// Key: BYr-oR-bE0.segmentTitles[0]
      ///
      /// Locales: pl, en
      var bYrORBE0SegmentTitles0: RswiftResources.StringResource { .init(key: "BYr-oR-bE0.segmentTitles[0]", tableName: "Main", source: source, developmentValue: "Round Trip", comment: nil) }

      /// en translation: One Way
      ///
      /// Key: BYr-oR-bE0.segmentTitles[1]
      ///
      /// Locales: pl, en
      var bYrORBE0SegmentTitles1: RswiftResources.StringResource { .init(key: "BYr-oR-bE0.segmentTitles[1]", tableName: "Main", source: source, developmentValue: "One Way", comment: nil) }

      /// en translation: App will use the first language that it supports from Language & Region settings. You can select a different language for App to use if you prefer.
      ///
      /// Key: Cez-CC-89r.text
      ///
      /// Locales: pl, en
      var cezCC89rText: RswiftResources.StringResource { .init(key: "Cez-CC-89r.text", tableName: "Main", source: source, developmentValue: "App will use the first language that it supports from Language & Region settings. You can select a different language for App to use if you prefer.", comment: nil) }

      /// en translation: Sign In
      ///
      /// Key: DxA-jq-WEX.configuration.title
      ///
      /// Locales: pl, en
      var dxAJqWEXConfigurationTitle: RswiftResources.StringResource { .init(key: "DxA-jq-WEX.configuration.title", tableName: "Main", source: source, developmentValue: "Sign In", comment: nil) }

      /// en translation: Button
      ///
      /// Key: DxA-jq-WEX.normalTitle
      ///
      /// Locales: pl, en
      var dxAJqWEXNormalTitle: RswiftResources.StringResource { .init(key: "DxA-jq-WEX.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: English(UK)
      ///
      /// Key: EL9-Gr-M7P.text
      ///
      /// Locales: pl, en
      var el9GrM7PText: RswiftResources.StringResource { .init(key: "EL9-Gr-M7P.text", tableName: "Main", source: source, developmentValue: "English(UK)", comment: nil) }

      /// en translation: Language
      ///
      /// Key: FC1-gs-lJ8.text
      ///
      /// Locales: pl, en
      var fc1GsLJ8Text: RswiftResources.StringResource { .init(key: "FC1-gs-lJ8.text", tableName: "Main", source: source, developmentValue: "Language", comment: nil) }

      /// en translation: Create account
      ///
      /// Key: FEY-y3-asz.configuration.title
      ///
      /// Locales: pl, en
      var feyy3AszConfigurationTitle: RswiftResources.StringResource { .init(key: "FEY-y3-asz.configuration.title", tableName: "Main", source: source, developmentValue: "Create account", comment: nil) }

      /// en translation: Button
      ///
      /// Key: FEY-y3-asz.normalTitle
      ///
      /// Locales: pl, en
      var feyy3AszNormalTitle: RswiftResources.StringResource { .init(key: "FEY-y3-asz.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: Button
      ///
      /// Key: GvR-Ej-pws.normalTitle
      ///
      /// Locales: pl, en
      var gvREjPwsNormalTitle: RswiftResources.StringResource { .init(key: "GvR-Ej-pws.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: Suggested Languages
      ///
      /// Key: Gyj-g3-oqR.text
      ///
      /// Locales: pl, en
      var gyjG3OqRText: RswiftResources.StringResource { .init(key: "Gyj-g3-oqR.text", tableName: "Main", source: source, developmentValue: "Suggested Languages", comment: nil) }

      /// en translation: Executive program
      ///
      /// Key: I9u-Xe-UOP.text
      ///
      /// Locales: pl, en
      var i9uXeUOPText: RswiftResources.StringResource { .init(key: "I9u-Xe-UOP.text", tableName: "Main", source: source, developmentValue: "Executive program", comment: nil) }

      /// en translation: Password
      ///
      /// Key: Ihn-Kw-Ono.placeholder
      ///
      /// Locales: pl, en
      var ihnKwOnoPlaceholder: RswiftResources.StringResource { .init(key: "Ihn-Kw-Ono.placeholder", tableName: "Main", source: source, developmentValue: "Password", comment: nil) }

      /// en translation: 123456
      ///
      /// Key: Ihn-Kw-Ono.text
      ///
      /// Locales: pl, en
      var ihnKwOnoText: RswiftResources.StringResource { .init(key: "Ihn-Kw-Ono.text", tableName: "Main", source: source, developmentValue: "123456", comment: nil) }

      /// en translation: Password
      ///
      /// Key: JVj-i8-LqL.placeholder
      ///
      /// Locales: pl, en
      var jVjI8LqLPlaceholder: RswiftResources.StringResource { .init(key: "JVj-i8-LqL.placeholder", tableName: "Main", source: source, developmentValue: "Password", comment: nil) }

      /// en translation: Button
      ///
      /// Key: KZj-0E-4b1.normalTitle
      ///
      /// Locales: pl, en
      var kZj0E4b1NormalTitle: RswiftResources.StringResource { .init(key: "KZj-0E-4b1.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: Select Origin
      ///
      /// Key: L7V-hR-Gj3.placeholder
      ///
      /// Locales: pl, en
      var l7VHRGj3Placeholder: RswiftResources.StringResource { .init(key: "L7V-hR-Gj3.placeholder", tableName: "Main", source: source, developmentValue: "Select Origin", comment: nil) }

      /// en translation: Other Languages
      ///
      /// Key: MVv-RN-iOD.text
      ///
      /// Locales: pl, en
      var mVvRNIODText: RswiftResources.StringResource { .init(key: "MVv-RN-iOD.text", tableName: "Main", source: source, developmentValue: "Other Languages", comment: nil) }

      /// en translation: Return date
      ///
      /// Key: NFW-jQ-xkz.text
      ///
      /// Locales: pl, en
      var nfwjqXkzText: RswiftResources.StringResource { .init(key: "NFW-jQ-xkz.text", tableName: "Main", source: source, developmentValue: "Return date", comment: nil) }

      /// en translation: Flight updates
      ///
      /// Key: RFj-Os-NY8.text
      ///
      /// Locales: pl, en
      var rFjOsNY8Text: RswiftResources.StringResource { .init(key: "RFj-Os-NY8.text", tableName: "Main", source: source, developmentValue: "Flight updates", comment: nil) }

      /// en translation: Settings
      ///
      /// Key: SZ4-j4-xon.text
      ///
      /// Locales: pl, en
      var sz4J4XonText: RswiftResources.StringResource { .init(key: "SZ4-j4-xon.text", tableName: "Main", source: source, developmentValue: "Settings", comment: nil) }

      /// en translation: Departure date
      ///
      /// Key: Thd-Pb-vr0.text
      ///
      /// Locales: pl, en
      var thdPbVr0Text: RswiftResources.StringResource { .init(key: "Thd-Pb-vr0.text", tableName: "Main", source: source, developmentValue: "Departure date", comment: nil) }

      /// en translation: Confirm
      ///
      /// Key: VSe-Sf-feT.configuration.title
      ///
      /// Locales: pl, en
      var vSeSfFeTConfigurationTitle: RswiftResources.StringResource { .init(key: "VSe-Sf-feT.configuration.title", tableName: "Main", source: source, developmentValue: "Confirm", comment: nil) }

      /// en translation: Button
      ///
      /// Key: VSe-Sf-feT.normalTitle
      ///
      /// Locales: pl, en
      var vSeSfFeTNormalTitle: RswiftResources.StringResource { .init(key: "VSe-Sf-feT.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: Select Destination
      ///
      /// Key: Xxe-SI-rTx.placeholder
      ///
      /// Locales: pl, en
      var xxeSIRTxPlaceholder: RswiftResources.StringResource { .init(key: "Xxe-SI-rTx.placeholder", tableName: "Main", source: source, developmentValue: "Select Destination", comment: nil) }

      /// en translation: Enter the code we sent you and we will process your account
      ///
      /// Key: XzO-c0-faj.text
      ///
      /// Locales: pl, en
      var xzOC0FajText: RswiftResources.StringResource { .init(key: "XzO-c0-faj.text", tableName: "Main", source: source, developmentValue: "Enter the code we sent you and we will process your account", comment: nil) }

      /// en translation: Sign In
      ///
      /// Key: c27-k3-JGh.configuration.title
      ///
      /// Locales: pl, en
      var c27K3JGhConfigurationTitle: RswiftResources.StringResource { .init(key: "c27-k3-JGh.configuration.title", tableName: "Main", source: source, developmentValue: "Sign In", comment: nil) }

      /// en translation: Button
      ///
      /// Key: c27-k3-JGh.normalTitle
      ///
      /// Locales: pl, en
      var c27K3JGhNormalTitle: RswiftResources.StringResource { .init(key: "c27-k3-JGh.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: English(US)
      ///
      /// Key: c3D-2h-z4D.text
      ///
      /// Locales: pl, en
      var c3D2hZ4DText: RswiftResources.StringResource { .init(key: "c3D-2h-z4D.text", tableName: "Main", source: source, developmentValue: "English(US)", comment: nil) }

      /// en translation: Phone Number
      ///
      /// Key: cAU-PP-WOZ.placeholder
      ///
      /// Locales: pl, en
      var cAUPPWOZPlaceholder: RswiftResources.StringResource { .init(key: "cAU-PP-WOZ.placeholder", tableName: "Main", source: source, developmentValue: "Phone Number", comment: nil) }

      /// en translation: Default
      ///
      /// Key: cyB-7F-xIK.text
      ///
      /// Locales: pl, en
      var cyB7FXIKText: RswiftResources.StringResource { .init(key: "cyB-7F-xIK.text", tableName: "Main", source: source, developmentValue: "Default", comment: nil) }

      /// en translation: Search Flight
      ///
      /// Key: dVN-mI-SoM.configuration.title
      ///
      /// Locales: pl, en
      var dVNMISoMConfigurationTitle: RswiftResources.StringResource { .init(key: "dVN-mI-SoM.configuration.title", tableName: "Main", source: source, developmentValue: "Search Flight", comment: nil) }

      /// en translation: Button
      ///
      /// Key: dVN-mI-SoM.normalTitle
      ///
      /// Locales: pl, en
      var dVNMISoMNormalTitle: RswiftResources.StringResource { .init(key: "dVN-mI-SoM.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: Dark Mode
      ///
      /// Key: eDl-Hv-rDv.text
      ///
      /// Locales: pl, en
      var eDlHvRDvText: RswiftResources.StringResource { .init(key: "eDl-Hv-rDv.text", tableName: "Main", source: source, developmentValue: "Dark Mode", comment: nil) }

      /// en translation: English(UK)
      ///
      /// Key: f2U-rf-ZgW.text
      ///
      /// Locales: pl, en
      var f2URfZgWText: RswiftResources.StringResource { .init(key: "f2U-rf-ZgW.text", tableName: "Main", source: source, developmentValue: "English(UK)", comment: nil) }

      /// en translation: Don't have an account?
      ///
      /// Key: f4W-nl-lIT.text
      ///
      /// Locales: pl, en
      var f4WNlLITText: RswiftResources.StringResource { .init(key: "f4W-nl-lIT.text", tableName: "Main", source: source, developmentValue: "Don't have an account?", comment: nil) }

      /// en translation: Start
      ///
      /// Key: fDY-24-xaA.title
      ///
      /// Locales: pl, en
      var fDY24XaATitle: RswiftResources.StringResource { .init(key: "fDY-24-xaA.title", tableName: "Main", source: source, developmentValue: "Start", comment: nil) }

      /// en translation: Email Address
      ///
      /// Key: fOk-TS-Hdw.placeholder
      ///
      /// Locales: pl, en
      var fOkTSHdwPlaceholder: RswiftResources.StringResource { .init(key: "fOk-TS-Hdw.placeholder", tableName: "Main", source: source, developmentValue: "Email Address", comment: nil) }

      /// en translation: Departure Date
      ///
      /// Key: hdw-H8-Dna.text
      ///
      /// Locales: pl, en
      var hdwH8DnaText: RswiftResources.StringResource { .init(key: "hdw-H8-Dna.text", tableName: "Main", source: source, developmentValue: "Departure Date", comment: nil) }

      /// en translation: Email Address
      ///
      /// Key: ihW-pq-F9k.placeholder
      ///
      /// Locales: pl, en
      var ihWPqF9kPlaceholder: RswiftResources.StringResource { .init(key: "ihW-pq-F9k.placeholder", tableName: "Main", source: source, developmentValue: "Email Address", comment: nil) }

      /// en translation: d@g.com
      ///
      /// Key: ihW-pq-F9k.text
      ///
      /// Locales: pl, en
      var ihWPqF9kText: RswiftResources.StringResource { .init(key: "ihW-pq-F9k.text", tableName: "Main", source: source, developmentValue: "d@g.com", comment: nil) }

      /// en translation: Sign In
      ///
      /// Key: kBe-he-lfP.configuration.title
      ///
      /// Locales: pl, en
      var kBeHeLfPConfigurationTitle: RswiftResources.StringResource { .init(key: "kBe-he-lfP.configuration.title", tableName: "Main", source: source, developmentValue: "Sign In", comment: nil) }

      /// en translation: Button
      ///
      /// Key: kBe-he-lfP.normalTitle
      ///
      /// Locales: pl, en
      var kBeHeLfPNormalTitle: RswiftResources.StringResource { .init(key: "kBe-he-lfP.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: Discount & deals
      ///
      /// Key: kEB-To-sM3.text
      ///
      /// Locales: pl, en
      var kEBToSM3Text: RswiftResources.StringResource { .init(key: "kEB-To-sM3.text", tableName: "Main", source: source, developmentValue: "Discount & deals", comment: nil) }

      /// en translation: Email Address
      ///
      /// Key: kJE-Eg-9Rr.placeholder
      ///
      /// Locales: pl, en
      var kJEEg9RrPlaceholder: RswiftResources.StringResource { .init(key: "kJE-Eg-9Rr.placeholder", tableName: "Main", source: source, developmentValue: "Email Address", comment: nil) }

      /// en translation: Tell us about yourself
      ///
      /// Key: l2f-7h-old.text
      ///
      /// Locales: pl, en
      var l2f7hOldText: RswiftResources.StringResource { .init(key: "l2f-7h-old.text", tableName: "Main", source: source, developmentValue: "Tell us about yourself", comment: nil) }

      /// en translation: Sign Up
      ///
      /// Key: lKX-4B-Ero.configuration.title
      ///
      /// Locales: pl, en
      var lKX4BEroConfigurationTitle: RswiftResources.StringResource { .init(key: "lKX-4B-Ero.configuration.title", tableName: "Main", source: source, developmentValue: "Sign Up", comment: nil) }

      /// en translation: Button
      ///
      /// Key: lKX-4B-Ero.normalTitle
      ///
      /// Locales: pl, en
      var lKX4BEroNormalTitle: RswiftResources.StringResource { .init(key: "lKX-4B-Ero.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: From
      ///
      /// Key: li8-YN-Wbh.text
      ///
      /// Locales: pl, en
      var li8YNWbhText: RswiftResources.StringResource { .init(key: "li8-YN-Wbh.text", tableName: "Main", source: source, developmentValue: "From", comment: nil) }

      /// en translation: Sign out
      ///
      /// Key: oZo-qf-BsD.configuration.title
      ///
      /// Locales: pl, en
      var oZoQfBsDConfigurationTitle: RswiftResources.StringResource { .init(key: "oZo-qf-BsD.configuration.title", tableName: "Main", source: source, developmentValue: "Sign out", comment: nil) }

      /// en translation: Button
      ///
      /// Key: oZo-qf-BsD.normalTitle
      ///
      /// Locales: pl, en
      var oZoQfBsDNormalTitle: RswiftResources.StringResource { .init(key: "oZo-qf-BsD.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: Polish
      ///
      /// Key: r5O-EX-F8D.text
      ///
      /// Locales: pl, en
      var r5OEXF8DText: RswiftResources.StringResource { .init(key: "r5O-EX-F8D.text", tableName: "Main", source: source, developmentValue: "Polish", comment: nil) }

      /// en translation: Set Password
      ///
      /// Key: s7h-LE-MLo.configuration.title
      ///
      /// Locales: pl, en
      var s7hLEMLoConfigurationTitle: RswiftResources.StringResource { .init(key: "s7h-LE-MLo.configuration.title", tableName: "Main", source: source, developmentValue: "Set Password", comment: nil) }

      /// en translation: Button
      ///
      /// Key: s7h-LE-MLo.normalTitle
      ///
      /// Locales: pl, en
      var s7hLEMLoNormalTitle: RswiftResources.StringResource { .init(key: "s7h-LE-MLo.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: To
      ///
      /// Key: sr9-Ll-Quv.text
      ///
      /// Locales: pl, en
      var sr9LlQuvText: RswiftResources.StringResource { .init(key: "sr9-Ll-Quv.text", tableName: "Main", source: source, developmentValue: "To", comment: nil) }

      /// en translation: Button
      ///
      /// Key: syA-21-iSE.normalTitle
      ///
      /// Locales: pl, en
      var syA21ISENormalTitle: RswiftResources.StringResource { .init(key: "syA-21-iSE.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: Confirm New Password
      ///
      /// Key: t4T-Qa-xPO.placeholder
      ///
      /// Locales: pl, en
      var t4TQaXPOPlaceholder: RswiftResources.StringResource { .init(key: "t4T-Qa-xPO.placeholder", tableName: "Main", source: source, developmentValue: "Confirm New Password", comment: nil) }

      /// en translation: Language
      ///
      /// Key: tbw-j1-LSt.text
      ///
      /// Locales: pl, en
      var tbwJ1LStText: RswiftResources.StringResource { .init(key: "tbw-j1-LSt.text", tableName: "Main", source: source, developmentValue: "Language", comment: nil) }

      /// en translation: Forgot password?
      ///
      /// Key: vV4-rk-ggg.configuration.title
      ///
      /// Locales: pl, en
      var vV4RkGggConfigurationTitle: RswiftResources.StringResource { .init(key: "vV4-rk-ggg.configuration.title", tableName: "Main", source: source, developmentValue: "Forgot password?", comment: nil) }

      /// en translation: Button
      ///
      /// Key: vV4-rk-ggg.normalTitle
      ///
      /// Locales: pl, en
      var vV4RkGggNormalTitle: RswiftResources.StringResource { .init(key: "vV4-rk-ggg.normalTitle", tableName: "Main", source: source, developmentValue: "Button", comment: nil) }

      /// en translation: To
      ///
      /// Key: w3m-eh-RFf.text
      ///
      /// Locales: pl, en
      var w3mEhRFfText: RswiftResources.StringResource { .init(key: "w3m-eh-RFf.text", tableName: "Main", source: source, developmentValue: "To", comment: nil) }

      /// en translation: Notifications
      ///
      /// Key: wjK-Sy-kc5.text
      ///
      /// Locales: pl, en
      var wjKSyKc5Text: RswiftResources.StringResource { .init(key: "wjK-Sy-kc5.text", tableName: "Main", source: source, developmentValue: "Notifications", comment: nil) }

      /// en translation: Full Name
      ///
      /// Key: wox-jd-aG5.placeholder
      ///
      /// Locales: pl, en
      var woxJdAG5Placeholder: RswiftResources.StringResource { .init(key: "wox-jd-aG5.placeholder", tableName: "Main", source: source, developmentValue: "Full Name", comment: nil) }

      /// en translation: Welcome back!
      ///
      /// Key: ys0-Kh-Jzb.text
      ///
      /// Locales: pl, en
      var ys0KhJzbText: RswiftResources.StringResource { .init(key: "ys0-Kh-Jzb.text", tableName: "Main", source: source, developmentValue: "Welcome back!", comment: nil) }

      /// en translation: Plan your next travel
      ///
      /// Key: z7d-T6-2GL.text
      ///
      /// Locales: pl, en
      var z7dT62GLText: RswiftResources.StringResource { .init(key: "z7d-T6-2GL.text", tableName: "Main", source: source, developmentValue: "Plan your next travel", comment: nil) }

      /// en translation: Select Destination
      ///
      /// Key: zgA-Eo-CwD.placeholder
      ///
      /// Locales: pl, en
      var zgAEoCwDPlaceholder: RswiftResources.StringResource { .init(key: "zgA-Eo-CwD.placeholder", tableName: "Main", source: source, developmentValue: "Select Destination", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 6 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `Color`.
    var color: RswiftResources.ColorResource { .init(name: "Color", path: [], bundle: bundle) }

    /// Color `DisabledButton`.
    var disabledButton: RswiftResources.ColorResource { .init(name: "DisabledButton", path: [], bundle: bundle) }

    /// Color `DisabledTitleColor`.
    var disabledTitleColor: RswiftResources.ColorResource { .init(name: "DisabledTitleColor", path: [], bundle: bundle) }

    /// Color `EnabledButton`.
    var enabledButton: RswiftResources.ColorResource { .init(name: "EnabledButton", path: [], bundle: bundle) }

    /// Color `borderColorBlue`.
    var borderColorBlue: RswiftResources.ColorResource { .init(name: "borderColorBlue", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 12 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `Line1`.
    var line1: RswiftResources.ImageResource { .init(name: "Line1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MenuScreen`.
    var menuScreen: RswiftResources.ImageResource { .init(name: "MenuScreen", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle`.
    var rectangle: RswiftResources.ImageResource { .init(name: "Rectangle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle_all`.
    var rectangle_all: RswiftResources.ImageResource { .init(name: "Rectangle_all", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle_big`.
    var rectangle_big: RswiftResources.ImageResource { .init(name: "Rectangle_big", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle_suggested`.
    var rectangle_suggested: RswiftResources.ImageResource { .init(name: "Rectangle_suggested", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Rectangle_white`.
    var rectangle_white: RswiftResources.ImageResource { .init(name: "Rectangle_white", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Start`.
    var start: RswiftResources.ImageResource { .init(name: "Start", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `button`.
    var button: RswiftResources.ImageResource { .init(name: "button", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `button_on`.
    var button_on: RswiftResources.ImageResource { .init(name: "button_on", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cb`.
    var cb: RswiftResources.ImageResource { .init(name: "cb", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tabler-icon-message-language`.
    var tablerIconMessageLanguage: RswiftResources.ImageResource { .init(name: "tabler-icon-message-language", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
      var uiSceneConfigurations: uiSceneConfigurations { .init(bundle: bundle) }

      func uiSceneConfigurations(bundle: Foundation.Bundle) -> uiSceneConfigurations {
        .init(bundle: bundle)
      }

      struct uiSceneConfigurations {
        let bundle: Foundation.Bundle
        var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations"], key: "_key") ?? "UISceneConfigurations" }
        var uiWindowSceneSessionRoleApplication: uiWindowSceneSessionRoleApplication { .init(bundle: bundle) }

        func uiWindowSceneSessionRoleApplication(bundle: Foundation.Bundle) -> uiWindowSceneSessionRoleApplication {
          .init(bundle: bundle)
        }

        struct uiWindowSceneSessionRoleApplication {
          let bundle: Foundation.Bundle
          var defaultConfiguration: defaultConfiguration { .init(bundle: bundle) }

          func defaultConfiguration(bundle: Foundation.Bundle) -> defaultConfiguration {
            .init(bundle: bundle)
          }

          struct defaultConfiguration {
            let bundle: Foundation.Bundle
            var uiSceneConfigurationName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneConfigurationName") ?? "Default Configuration" }
            var uiSceneDelegateClassName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneDelegateClassName") ?? "$(PRODUCT_MODULE_NAME).SceneDelegate" }
            var uiSceneStoryboardFile: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneStoryboardFile") ?? "Main" }
          }
        }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 1 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `GoogleService-Info.plist`.
    var googleServiceInfoPlist: RswiftResources.FileResource { .init(name: "GoogleService-Info", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.segue` struct is generated, and contains static references to 9 view controllers.
  struct segue {
    let forgotPasswordViewController = forgotPasswordViewController()
    let homeViewController = homeViewController()
    let languageViewController = languageViewController()
    let loginViewController = loginViewController()
    let newPasswordViewController = newPasswordViewController()
    let registrationViewController = registrationViewController()
    let settingsViewController = settingsViewController()
    let startViewController = startViewController()
    let verificationCodeViewController = verificationCodeViewController()

    /// This struct is generated for `ForgotPasswordViewController`, and contains static references to 2 segues.
    struct forgotPasswordViewController {

      /// Segue identifier `backToLoginSegue`.
      var backToLoginSegue: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, ForgotPasswordViewController, LoginViewController> { .init(identifier: "backToLoginSegue") }

      /// Segue identifier `goToCodeSegue`.
      var goToCodeSegue: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, ForgotPasswordViewController, VerificationCodeViewController> { .init(identifier: "goToCodeSegue") }
    }

    /// This struct is generated for `HomeViewController`, and contains static references to 1 segues.
    struct homeViewController {

      /// Segue identifier `showSettingsPage`.
      var showSettingsPage: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, HomeViewController, SettingsViewController> { .init(identifier: "showSettingsPage") }
    }

    /// This struct is generated for `LanguageViewController`, and contains static references to 1 segues.
    struct languageViewController {

      /// Segue identifier `backToSettingsSegue`.
      var backToSettingsSegue: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, LanguageViewController, SettingsViewController> { .init(identifier: "backToSettingsSegue") }
    }

    /// This struct is generated for `LoginViewController`, and contains static references to 3 segues.
    struct loginViewController {

      /// Segue identifier `HomeViewController`.
      var homeViewController: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, LoginViewController, HomeViewController> { .init(identifier: "HomeViewController") }

      /// Segue identifier `showCreateAccountPage`.
      var showCreateAccountPage: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, LoginViewController, RegistrationViewController> { .init(identifier: "showCreateAccountPage") }

      /// Segue identifier `showForgotPasswordPage`.
      var showForgotPasswordPage: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, LoginViewController, ForgotPasswordViewController> { .init(identifier: "showForgotPasswordPage") }
    }

    /// This struct is generated for `NewPasswordViewController`, and contains static references to 2 segues.
    struct newPasswordViewController {

      /// Segue identifier `backToVerficationSegue`.
      var backToVerficationSegue: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, NewPasswordViewController, VerificationCodeViewController> { .init(identifier: "backToVerficationSegue") }

      /// Segue identifier `goToLoginAfterNewPass`.
      var goToLoginAfterNewPass: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, NewPasswordViewController, LoginViewController> { .init(identifier: "goToLoginAfterNewPass") }
    }

    /// This struct is generated for `RegistrationViewController`, and contains static references to 2 segues.
    struct registrationViewController {

      /// Segue identifier `HomeViewController`.
      var homeViewController: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, RegistrationViewController, HomeViewController> { .init(identifier: "HomeViewController") }

      /// Segue identifier `showLoginPage`.
      var showLoginPage: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, RegistrationViewController, LoginViewController> { .init(identifier: "showLoginPage") }
    }

    /// This struct is generated for `SettingsViewController`, and contains static references to 3 segues.
    struct settingsViewController {

      /// Segue identifier `backToHomepageSegue`.
      var backToHomepageSegue: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, SettingsViewController, HomeViewController> { .init(identifier: "backToHomepageSegue") }

      /// Segue identifier `showLanguagesPage`.
      var showLanguagesPage: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, SettingsViewController, LanguageViewController> { .init(identifier: "showLanguagesPage") }

      /// Segue identifier `signOutSegue`.
      var signOutSegue: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, SettingsViewController, StartViewController> { .init(identifier: "signOutSegue") }
    }

    /// This struct is generated for `StartViewController`, and contains static references to 2 segues.
    struct startViewController {

      /// Segue identifier `ShowLoginPageSegue`.
      var showLoginPageSegue: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, StartViewController, LoginViewController> { .init(identifier: "ShowLoginPageSegue") }

      /// Segue identifier `ShowRegistrationPageSegue`.
      var showRegistrationPageSegue: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, StartViewController, RegistrationViewController> { .init(identifier: "ShowRegistrationPageSegue") }
    }

    /// This struct is generated for `VerificationCodeViewController`, and contains static references to 2 segues.
    struct verificationCodeViewController {

      /// Segue identifier `goBackToForgotPass`.
      var goBackToForgotPass: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, VerificationCodeViewController, ForgotPasswordViewController> { .init(identifier: "goBackToForgotPass") }

      /// Segue identifier `goToNewPassword`.
      var goToNewPassword: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, VerificationCodeViewController, NewPasswordViewController> { .init(identifier: "goToNewPassword") }
    }
  }

  /// This `_R.reuseIdentifier` struct is generated, and contains static references to 1 reuse identifiers.
  struct reuseIdentifier {

    /// Reuse identifier `LanguageCell`.
    let languageCell: RswiftResources.ReuseIdentifier<UIKit.UITableViewCell> = .init(identifier: "LanguageCell")
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
      try self.main.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {
        if UIKit.UIImage(named: "Start", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Start' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = StartViewController

      let bundle: Foundation.Bundle

      let name = "Main"

      var forgotPasswordViewController: RswiftResources.StoryboardViewControllerIdentifier<ForgotPasswordViewController> { .init(identifier: "ForgotPasswordViewController", storyboard: name, bundle: bundle) }
      var homeViewController: RswiftResources.StoryboardViewControllerIdentifier<HomeViewController> { .init(identifier: "HomeViewController", storyboard: name, bundle: bundle) }
      var languageViewController: RswiftResources.StoryboardViewControllerIdentifier<LanguageViewController> { .init(identifier: "LanguageViewController", storyboard: name, bundle: bundle) }
      var loginViewController: RswiftResources.StoryboardViewControllerIdentifier<LoginViewController> { .init(identifier: "LoginViewController", storyboard: name, bundle: bundle) }
      var newPasswordViewController: RswiftResources.StoryboardViewControllerIdentifier<NewPasswordViewController> { .init(identifier: "NewPasswordViewController", storyboard: name, bundle: bundle) }
      var registrationViewController: RswiftResources.StoryboardViewControllerIdentifier<RegistrationViewController> { .init(identifier: "RegistrationViewController", storyboard: name, bundle: bundle) }
      var settingsViewController: RswiftResources.StoryboardViewControllerIdentifier<SettingsViewController> { .init(identifier: "SettingsViewController", storyboard: name, bundle: bundle) }
      var startViewController: RswiftResources.StoryboardViewControllerIdentifier<StartViewController> { .init(identifier: "StartViewController", storyboard: name, bundle: bundle) }
      var verificationCodeViewController: RswiftResources.StoryboardViewControllerIdentifier<VerificationCodeViewController> { .init(identifier: "VerificationCodeViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if UIKit.UIImage(named: "Line1", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Line1' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "MenuScreen", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'MenuScreen' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "Rectangle", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "Rectangle_big", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle_big' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "Rectangle_suggested", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Rectangle_suggested' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIImage(named: "Start", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'Start' is used in storyboard 'Main', but couldn't be loaded.") }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "airplane.arrival") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'airplane.arrival' is used in storyboard 'Main', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "airplane.departure") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'airplane.departure' is used in storyboard 'Main', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "arrow.backward") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'arrow.backward' is used in storyboard 'Main', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "arrow.backward.to.line") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'arrow.backward.to.line' is used in storyboard 'Main', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "arrow.left") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'arrow.left' is used in storyboard 'Main', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "bell") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'bell' is used in storyboard 'Main', but couldn't be loaded.") } }
        if UIKit.UIImage(named: "button", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'button' is used in storyboard 'Main', but couldn't be loaded.") }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "calendar") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'calendar' is used in storyboard 'Main', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "checkmark") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'checkmark' is used in storyboard 'Main', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "gearshape") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'gearshape' is used in storyboard 'Main', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "greaterthan") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'greaterthan' is used in storyboard 'Main', but couldn't be loaded.") } }
        if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "moon") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'moon' is used in storyboard 'Main', but couldn't be loaded.") } }
        if UIKit.UIImage(named: "tabler-icon-message-language", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'tabler-icon-message-language' is used in storyboard 'Main', but couldn't be loaded.") }
        if UIKit.UIColor(named: "Color", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'Color' is used in storyboard 'Main', but couldn't be loaded.") }
        if forgotPasswordViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'forgotPasswordViewController' could not be loaded from storyboard 'Main' as 'ForgotPasswordViewController'.") }
        if homeViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'homeViewController' could not be loaded from storyboard 'Main' as 'HomeViewController'.") }
        if languageViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'languageViewController' could not be loaded from storyboard 'Main' as 'LanguageViewController'.") }
        if loginViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'loginViewController' could not be loaded from storyboard 'Main' as 'LoginViewController'.") }
        if newPasswordViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'newPasswordViewController' could not be loaded from storyboard 'Main' as 'NewPasswordViewController'.") }
        if registrationViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'registrationViewController' could not be loaded from storyboard 'Main' as 'RegistrationViewController'.") }
        if settingsViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'settingsViewController' could not be loaded from storyboard 'Main' as 'SettingsViewController'.") }
        if startViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'startViewController' could not be loaded from storyboard 'Main' as 'StartViewController'.") }
        if verificationCodeViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'verificationCodeViewController' could not be loaded from storyboard 'Main' as 'VerificationCodeViewController'.") }
      }
    }
  }
}